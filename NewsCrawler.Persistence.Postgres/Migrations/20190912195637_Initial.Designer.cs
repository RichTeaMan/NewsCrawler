// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsCrawler.Persistence.Postgres;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NewsCrawler.Persistence.Postgres.Migrations
{
    [DbContext(typeof(PostgresNewsArticleContext))]
    [Migration("20190912195637_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("NewsCrawler.Persistence.Postgres.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CleanedContent")
                        .HasColumnType("text");

                    b.Property<int>("CleanedContentLength");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContentLength");

                    b.Property<bool>("IsIndexPage");

                    b.Property<string>("NewsSource")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasDefaultValue("Unspecified");

                    b.Property<DateTimeOffset?>("PublishedDate");

                    b.Property<DateTimeOffset>("RecordedDate");

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("NewsCrawler.Persistence.Postgres.WordCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<string>("NewsSource")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("WordCount");
                });
#pragma warning restore 612, 618
        }
    }
}
